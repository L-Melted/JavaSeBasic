package cn.lm.demo.day10_接口多态;

public class InterfacesDemo {
    //接口，是Java语言中一种引用类型(数组, 类,接口)，是方法的集合，如果说类的内部封装了成员变量、构造方法和成员方法，那么接口的内部封装了方法 和常量
    //方法：抽象方法，默认方法，静态方法，私有普通方法，私有静态方法
    //常量： public static final  ,值不能被改变，而且定义的时候就要赋值

    /**
     *
     * 1.默认方法：使用default修饰，不可省略，供子类调用或者子类重写
     *            默认方法带方法体
     * 2.静态方法：使用static修饰，供接口直接调用
     *            静态方法也有方法体
     * 3.私有方法：使用private修饰，供接口中的默认方法或者静态方法调用
     *            私有方法带有方法体
     *
     * 抽象方法的使用必须编写一个子类,实现接口,重写方法,创建子类对象,调用方法.接口是不能直接创建对象的
     * 非抽象子类实现接口：必须重写接口中所有抽象方法
     *                   继承了接口的默认方法，即可以直接调用，也可以重写（子类对象进行调用）
     *
     * 静态方法的使用：静态与.class文件相关，只能使用接口名调用，不可以通过实现类的类名或者实现类的对象调用
     *
     * 私有方法的使用：
     *     私有方法：只有默认方法可以调用或其他私有私有方法可以（非静态具体方法可用）
     *              如果一个接口中有多个默认方法，并且方法中有重复的内容，那么可以抽取出来，封装到私有方法中，供默认方法去调用。
     *              意义：在于提高代码的复用性
     *     私有静态方法：默认方法和静态方法可以调用，私有方法可以（可以被静态或者非静态具体方法调用）
     *
     * 对于接口的多实现：
     *     接口中，有多个抽象方法时，实现类必须重写所有抽象方法，如果抽象方法有重名的，只需要重写一次
     *     接口中，有多个默认方法时，实现类都可继承使用。如果默认方法有重名的，必须重写一次。
     *     接口中，不同的接口中存在同名的静态方法并不会冲突，原因是只能通过各自接口名访问静态方法
     *
     * 优先级的问题：
     *     当一个类，既继承一个父类，又实现若干个接口时，父类中的成员方法与接口中的默认方法重名，子类就近选择执行父类的成员方法。
     *
     * 接口的多继承【了解】
     *     一个接口能继承另一个或者多个接口，这和类之间的继承比较相似。接口的继承使用 extends 关键字，子接口继承父接口的方法。如果父接口中的默认方法有重名的，那么子接口需要重写一次。
     *
     * 其他成员特点
     *
     * 1. 接口中，无法定义成员变量，但是可以定义常量，其值不可以改变，默认使用public static final修饰。
     *    (接口名.常量名)
     * 2. 接口中，没有构造方法，不能创建对象。  (抽象类中是可以有构造方法的)
     * 3. 接口中，没有静态代码块。
     *    可见,  在接口就是为方法(功能)而存在的.
     *
     * */


}
